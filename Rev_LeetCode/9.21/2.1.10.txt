class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        vector<vector<int>> ans;
        int n,i,j,k;
        int right,left,now;
        n=nums.size();
        set<vector<int>> kp;
        sort(nums.begin(),nums.end());
        for(i=0;i<n-2;i++)
        {
            for(j=i+1;j<n-1;j++)
            {
                left=i+1;
                right=n-1;
                while(1)
                {
                    /*if(left!=i+1)
                    {
                        while(left<j)
                        {
                            if(nums[left]==nums[left-1])
                            {
                                left++;
                            }
                            else break;
                        }
                    }
                    if(right!=n-1)
                    {
                        while(right>j)
                        {
                            if(nums[right]==nums[right+1])
                            {
                                right--;
                            }
                            else break;
                        }
                    }*/
                    if(right<=j||left>=j)break;
                    now=nums[i]+nums[j]+nums[left]+nums[right];
                    if(now==target)
                    {
                        /*vector<int> p;
                        p.push_back(nums[i]);
                        p.push_back(nums[j]);
                        p.push_back(nums[right]);
                        p.push_back(nums[left]);*/
                        vector<int> temp{nums[i],nums[j],nums[left],nums[right]};
                        //ans.push_back(p);
                        kp.insert(temp);
                        right--;
                        left++;
                        continue;
                    }
                    //if(right<=j||left>=j)break;
                    if(now>target)right--;
                    else left++;
                    
                }
                
            }
    
        }
        for(auto c:kp)
        {
            ans.push_back(c);
        }
        return ans;
        
    }
};
