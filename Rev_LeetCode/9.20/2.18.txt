class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        int n=nums.size();
        vector<vector<int>> ans;
        int i,j,k;
        int right,left,now;
        sort(nums.begin(),nums.end());
        for(i=0;i<n;i++)
        {
            if(nums[i]>0)break;
            if(i>=1)
            {
                if(nums[i]==nums[i-1])continue;
            }
            left=i+1;
            right=n-1;
            while(1)
            {
                
                if(left>=right)break;
                
                if(left!=i+1)
                {
                    while(1)
                    {
                        if(nums[left]==nums[left-1]&&left<right)left++;
                        else break;
                    }
                }
                if(right!=n-1)
                {
                    while(1)
                    {
                        if(nums[right]==nums[right+1]&&left<right)right--;
                        else break;
                    }
                }
                if(left>=right)break;
                now=nums[i]+nums[right]+nums[left];
                if(now==0)
                {
                    vector<int> p;
                    p.push_back(nums[i]);
                    p.push_back(nums[right]);
                    p.push_back(nums[left]);
                    ans.push_back(p);
                    left++;
                    right--;
                }
                if(now>0)
                {
                    right--;
                }
                if(now<0)
                    left++;  
            }
        }
        return ans;
        
    }
};